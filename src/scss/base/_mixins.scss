/* _mixins.scss */

@mixin td-inner-border($get-border-color) {
    > .inner-border {
        border: $table-inner-border-width solid $get-border-color;
    }

    &.is-range-parent > .inner-border {
        border-right:0px solid transparent;
    }

    &.is-range-child > .inner-border {
        border-left:0px solid transparent;
        border-right:0px solid transparent;
    }

    &.is-range-child-last > .inner-border {
        border-right:$table-inner-border-width solid $get-border-color;
    }
}

@mixin td-fixed-width($width) {
    width: $width;
    min-width: $width;
    max-width: $width;
}

@mixin trimString {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    border-radius: $radius;
}

@mixin border-radius-x($x, $radius) {
    @if $x == 'left' {
        -webkit-border-top-left-radius: $radius;
        -webkit-border-bottom-left-radius: $radius;
        -moz-border-radius-topleft: $radius;
        -moz-border-radius-bottomleft: $radius;
        border-top-left-radius: $radius;
        border-bottom-left-radius: $radius;
    }
    @else if $x == 'right' {
        -webkit-border-top-right-radius: $radius;
        -webkit-border-bottom-right-radius: $radius;
        -moz-border-radius-topright: $radius;
        -moz-border-radius-bottomright: $radius;
        border-top-right-radius: $radius;
        border-bottom-right-radius: $radius;
    }
}

@mixin set-opacity($opacity) {
    @if $opacity == 'full' {
        filter: alpha(opacity=100);
        opacity: 1.0;
    }
    @else if $opacity == 'twothir' {
        filter: alpha(opacity=75);
        opacity: 0.75;
    }
    @else if $opacity == 'semi' {
        filter: alpha(opacity=50);
        opacity: 0.5;
    }
    @else if $opacity == 'faint' {
        filter: alpha(opacity=30);
        opacity: 0.30;
    }
}

@mixin add-border($size, $color, $position) {
    @if $position == 'all' {
        border: $size solid $color;
    }
    @else if $position == 'top' {
        border-top: $size solid $color;
    }
    @else if $position == 'bottom' {
        border-bottom: $size solid $color;
    }
    @else if $position == 'right' {
        border-right: $size solid $color;
    }
    @else if $position == 'left' {
        border-left: $size solid $color;
    }
    @else if $position == 'top-bottom' {
        border-top: $size solid $color;
        border-bottom: $size solid $color;
    }
    @else if $position == 'right-left' {
        border-right: $size solid $color;
        border-left: $size solid $color;
    }
}

@mixin add-margin($size, $position) {
    @if $position == 'all' {
        margin: $size;
    }
    @else if $position == 'top' {
        margin-top: $size;
    }
    @else if $position == 'bottom' {
        margin-bottom: $size;
    }
    @else if $position == 'right' {
        margin-right: $size;
    }
    @else if $position == 'left' {
        margin-left: $size;
    }
}

@mixin add-background($color) {
    background: $color;

    @if $color == $bp_color-black {
        color: $bp_color-white;
    }
    @else {
        color: $bp_color-black;
    }
}

@mixin no-padding($side) {
    /*
    @include no-padding("left");
    */
    @if $side == 'all' {
        .no-padding {
            padding: 0 !important;
        }
    }
    @else {
        .no-padding-#{$side} {
            padding-#{$side}: 0 !important;
        }
    }
}

@mixin triangle($size, $position, $color) {
    width: 0;
    height: 0;
    border-style: solid;
    border-color: transparent transparent $color transparent;

    @if $position == 'top' {
        border-width: 0 $size $size $size;
    }
    @else if $position == 'bottom' {
        border-width: $size $size 0 $size;
    }
    @else if $position == 'right' {
        border-width: $size 0 $size $size;
    }
    @else if $position == 'left' {
        border-width: $size $size $size 0;
    }
}

@mixin box-shadow($boolean) {
    @if $boolean == true {
        -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,0.075);
        box-shadow: inset 0 1px 1px rgba(0,0,0,0.075);
    }
    @else {
        -webkit-box-shadow: none;
        box-shadow: none;
    }
}

@mixin drop-shadow() {
    /* http://www.cssmatic.com/box-shadow */
    -webkit-box-shadow: 0 6px 12px rgba(0,0,0,0.175);
    -moz-box-shadow: 0px 6px 12px 0px rgba(0,0,0,0.175);
    box-shadow: 0 6px 12px rgba(0,0,0,0.175);
}

@mixin drop-shadow-flat() {
    -webkit-box-shadow: 0px 0px 20px 0px rgba(0,0,0,0.2);
    -moz-box-shadow: 0px 0px 20px 0px rgba(0,0,0,0.2);
    box-shadow: 0px 0px 20px 0px rgba(0,0,0,0.2);
}

@mixin hide-text() {
    text-indent: 100%;
    white-space: nowrap;
    overflow: hidden;
}

@mixin trim-string() {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}
